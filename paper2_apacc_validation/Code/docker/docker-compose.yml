# Docker Compose configuration for APACC simulation environment
version: '3.8'

services:
  # CARLA server instances
  carla-server-1:
    image: carlasim/carla:0.9.15
    container_name: carla-server-1
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
    ports:
      - "2000:2000"
    command: ./CarlaUE4.sh -quality-level=Low -RenderOffScreen -nosound -carla-rpc-port=2000
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  carla-server-2:
    image: carlasim/carla:0.9.15
    container_name: carla-server-2
    environment:
      - NVIDIA_VISIBLE_DEVICES=1
    ports:
      - "2001:2000"
    command: ./CarlaUE4.sh -quality-level=Low -RenderOffScreen -nosound -carla-rpc-port=2000
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # APACC simulation controller
  apacc-controller:
    build:
      context: .
      dockerfile: Dockerfile.apacc
    container_name: apacc-controller
    depends_on:
      - carla-server-1
      - carla-server-2
      - influxdb
      - redis
    environment:
      - CARLA_HOSTS=carla-server-1:2000,carla-server-2:2001
      - INFLUXDB_HOST=influxdb
      - REDIS_HOST=redis
      - NUM_SCENARIOS=10000
    volumes:
      - ./scenarios:/app/scenarios
      - ./results:/app/results
      - ./logs:/app/logs
    command: python run_monte_carlo.py

  # Time-series database for metrics
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=apacc
      - DOCKER_INFLUXDB_INIT_PASSWORD=apacc_metrics
      - DOCKER_INFLUXDB_INIT_ORG=qubittum
      - DOCKER_INFLUXDB_INIT_BUCKET=simulations
    volumes:
      - influxdb-data:/var/lib/influxdb2

  # Redis for task queue
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources

  # Jupyter for analysis
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./results:/home/jovyan/results
    environment:
      - JUPYTER_ENABLE_LAB=yes

volumes:
  influxdb-data:
  redis-data:
  grafana-data: